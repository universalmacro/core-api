/*
Core APIs

universalmacro

API version: 0.0.2
Contact: chenyunda218@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the NodeList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NodeList{}

// NodeList struct for NodeList
type NodeList struct {
	Items []Node `json:"items"`
	Pagination Pagination `json:"pagination"`
}

// NewNodeList instantiates a new NodeList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodeList(items []Node, pagination Pagination) *NodeList {
	this := NodeList{}
	this.Items = items
	this.Pagination = pagination
	return &this
}

// NewNodeListWithDefaults instantiates a new NodeList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodeListWithDefaults() *NodeList {
	this := NodeList{}
	return &this
}

// GetItems returns the Items field value
func (o *NodeList) GetItems() []Node {
	if o == nil {
		var ret []Node
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *NodeList) GetItemsOk() ([]Node, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *NodeList) SetItems(v []Node) {
	o.Items = v
}

// GetPagination returns the Pagination field value
func (o *NodeList) GetPagination() Pagination {
	if o == nil {
		var ret Pagination
		return ret
	}

	return o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value
// and a boolean to check if the value has been set.
func (o *NodeList) GetPaginationOk() (*Pagination, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pagination, true
}

// SetPagination sets field value
func (o *NodeList) SetPagination(v Pagination) {
	o.Pagination = v
}

func (o NodeList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NodeList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["items"] = o.Items
	toSerialize["pagination"] = o.Pagination
	return toSerialize, nil
}

type NullableNodeList struct {
	value *NodeList
	isSet bool
}

func (v NullableNodeList) Get() *NodeList {
	return v.value
}

func (v *NullableNodeList) Set(val *NodeList) {
	v.value = val
	v.isSet = true
}

func (v NullableNodeList) IsSet() bool {
	return v.isSet
}

func (v *NullableNodeList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodeList(val *NodeList) *NullableNodeList {
	return &NullableNodeList{value: val, isSet: true}
}

func (v NullableNodeList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodeList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


